.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.3
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Psy::Dna::Iupac 3"
.TH Psy::Dna::Iupac 3 "2005-11-15" "perl v5.8.7" "User Contributed Perl Documentation"
.SH "NAME"
Psy::Dna::Iupac
.SH "VERSION"
.IX Header "VERSION"
Version 0.01
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
A static meta data construct that facilitates too/from iupac translations
.PP
Case is not checked! lowercase input will not return true
.PP
.Vb 1
\&    use Psy::Dna::Iupac;
.Ve
.PP
.Vb 2
\&    my $foo = Psy::Dna::Iupac->new();
\&    ...
.Ve
.SH "EXPORT"
.IX Header "EXPORT"
\fInotes\fR
.IX Subsection "notes"
.PP
http://www.cellbiol.com/cgi\-bin/oligo/html/iupac.txt
.PP
ambiguous_dna_values = {
    \*(L"A\*(R": \*(L"A\*(R",
    \*(L"C\*(R": \*(L"C\*(R",
    \*(L"G\*(R": \*(L"G\*(R",
    \*(L"T\*(R": \*(L"T\*(R",
    \*(L"M\*(R": \*(L"\s-1AC\s0\*(R",
    \*(L"R\*(R": \*(L"\s-1AG\s0\*(R",
    \*(L"W\*(R": \*(L"\s-1AT\s0\*(R",
    \*(L"S\*(R": \*(L"\s-1CG\s0\*(R",
    \*(L"Y\*(R": \*(L"\s-1CT\s0\*(R",
    \*(L"K\*(R": \*(L"\s-1GT\s0\*(R",
    \*(L"V\*(R": \*(L"\s-1ACG\s0\*(R",
    \*(L"H\*(R": \*(L"\s-1ACT\s0\*(R",
    \*(L"D\*(R": \*(L"\s-1AGT\s0\*(R",
    \*(L"B\*(R": \*(L"\s-1CGT\s0\*(R",
    \*(L"X\*(R": \*(L"\s-1GATC\s0\*(R",
    \*(L"N\*(R": \*(L"\s-1GATC\s0\*(R",
    }
ambiguous_rna_values = {
    \*(L"A\*(R": \*(L"A\*(R",
    \*(L"C\*(R": \*(L"C\*(R",
    \*(L"G\*(R": \*(L"G\*(R",
    \*(L"U\*(R": \*(L"U\*(R",
    \*(L"M\*(R": \*(L"\s-1AC\s0\*(R",
    \*(L"R\*(R": \*(L"\s-1AG\s0\*(R",
    \*(L"W\*(R": \*(L"\s-1AU\s0\*(R",
    \*(L"S\*(R": \*(L"\s-1CG\s0\*(R",
    \*(L"Y\*(R": \*(L"\s-1CU\s0\*(R",
    \*(L"K\*(R": \*(L"\s-1GU\s0\*(R",
    \*(L"V\*(R": \*(L"\s-1ACG\s0\*(R",
    \*(L"H\*(R": \*(L"\s-1ACU\s0\*(R",
    \*(L"D\*(R": \*(L"\s-1AGU\s0\*(R",
    \*(L"B\*(R": \*(L"\s-1CGU\s0\*(R",
    \*(L"X\*(R": \*(L"\s-1GAUC\s0\*(R",
    \*(L"N\*(R": \*(L"\s-1GAUC\s0\*(R",
    }
.PP
ambiguous_dna_complement = {
    \*(L"A\*(R": \*(L"T\*(R",
    \*(L"C\*(R": \*(L"G\*(R",
    \*(L"G\*(R": \*(L"C\*(R",
    \*(L"T\*(R": \*(L"A\*(R",
    \*(L"M\*(R": \*(L"K\*(R",
    \*(L"R\*(R": \*(L"Y\*(R",
    \*(L"W\*(R": \*(L"W\*(R",
    \*(L"S\*(R": \*(L"S\*(R",
    \*(L"Y\*(R": \*(L"R\*(R",
    \*(L"K\*(R": \*(L"M\*(R",
    \*(L"V\*(R": \*(L"B\*(R",
    \*(L"H\*(R": \*(L"D\*(R",
    \*(L"D\*(R": \*(L"H\*(R",
    \*(L"B\*(R": \*(L"V\*(R",
    \*(L"X\*(R": \*(L"X\*(R",
    \*(L"N\*(R": \*(L"N\*(R",
    }
.Sh "new"
.IX Subsection "new"
Return a new object.
.Sh "nuc"
.IX Subsection "nuc"
Returns the nuc(s) corresponding to the Iupac code, should be integrated into the dataobject for speed
.Sh "iupac"
.IX Subsection "iupac"
Returns the corresponding \s-1IUPAC\s0 code, input must be alphabeticall!!!
.Sh "tstv"
.IX Subsection "tstv"
A table/report test
.Sh "legalnuc"
.IX Subsection "legalnuc"
Returns 0/1 depending on  whether \f(CW$_\fR contains a legal nucleotide character.
.Sh "legaliupac"
.IX Subsection "legaliupac"
Checks that \f(CW$in\fR is a legal iupac code
.Sh "loopIupac"
.IX Subsection "loopIupac"
Returns an array of the legal \s-1IUPAC\s0 characters
.SH "AUTHOR"
.IX Header "AUTHOR"
\&'Matt, \f(CW\*(C`<m{j}yoder@{tee}[aye](em)(you).domain4unis>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to
\&\f(CW\*(C`bug\-psy\-dna\-iupac@rt.cpan.org\*(C'\fR, or through the web interface at
<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Psy>.
I will be notified, and then you'll automatically be notified of progress on
your bug as I make changes.
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2005 'Matt, all rights reserved.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
